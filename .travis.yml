sudo: required
dist: trusty
language: cpp

matrix:
  include:
   - compiler: gcc-4
     os: linux
     dist: trusty
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-4.9
     env: COMPILER=g++-4.9
         - WARN="-DRAJA_ENABLE_WARNINGS=On"
   - compiler: gcc-5
     os: linux
     dist: trusty
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-5
     env: COMPILER=g++-5
         - WARN="-DRAJA_ENABLE_WARNINGS=On"
   - compiler: gcc-6
     os: linux
     dist: trusty
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-6
     env: COMPILER=g++-6
         - WARN=""
         - CMAKE_EXTRA_FLAGS="-DCMAKE_EXE_LINKER_FLAGS='-coverage' -DCMAKE_CXX_FLAGS='-coverage'"
         - COVERAGE=t
   - compiler: clang-3.6
     os: linux
     dist: trusty
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-5
     env:
         - COMPILER=$HOME/llvm/clang+llvm-3.6.0-x86_64-linux-gnu/bin/clang++
         - DOWNLOAD=http://releases.llvm.org/3.6.0/clang+llvm-3.6.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz
         - WARN=""
   - compiler: clang-3.7
     os: linux
     dist: trusty
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-5
     env:
         - COMPILER=$HOME/llvm/clang+llvm-3.7.0-x86_64-linux-gnu-ubuntu-14.04/bin/clang++
         - DOWNLOAD=http://releases.llvm.org/3.7.0/clang+llvm-3.7.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz
         - WARN=""
   - compiler: clang-3.8
     os: linux
     dist: trusty
     addons:
       apt:
         sources:
           - ubuntu-toolchain-r-test
         packages:
           - g++-5
     env:
         - COMPILER=$HOME/llvm/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04/bin/clang++
         - LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$HOME/llvm/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04/lib
         - DOWNLOAD=http://releases.llvm.org/3.8.0/clang+llvm-3.8.0-x86_64-linux-gnu-ubuntu-14.04.tar.xz
         - WARN=""
   - compiler: nvcc
     os: osx
     osx_image: xcode8.3
     env:
         - COMPILER=clang++
         - CMAKE_EXTRA_FLAGS="-DRAJA_ENABLE_CUDA=On -DRAJA_ENABLE_NESTED=On"
         - USE_OSX=1

cache:
    directories:
        - $HOME/llvm
before_install:
  - if [[ -z "${USE_OSX}" ]] ; then sudo apt-get update -qq; fi
  - if [[ -n "$DOWNLOAD" ]] ; then if [[ ! -e "$COMPILER" ]] ; then cd $HOME; curl -o tarball.tar.xz $DOWNLOAD && cd $HOME/llvm && tar xf $HOME/tarball.tar.xz ; fi ; fi
  - CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.0-rc2-Linux-x86_64.tar.gz"
  - if [[ -z "${USE_OSX}" ]] ; then cd $HOME && curl -o cmake-tarball.tar.gz ${CMAKE_URL} && mkdir -p $HOME/cmake && cd $HOME/cmake && tar xf $HOME/cmake-tarball.tar.gz --strip-components=1 && export PATH=${PWD}/bin:${PATH} ; fi
  - if [[ -n "${USE_OSX}" ]]; then brew update; brew cask install cmake cuda; fi
script:
  - cd $TRAVIS_BUILD_DIR
  - mkdir travis-build && cd travis-build
  - cmake -DCMAKE_CXX_COMPILER="$COMPILER" $WARN $CMAKE_EXTRA_FLAGS ../
  - make -j
  - make test
after_success:
  - if [[ -n "${COVERAGE}" ]] ; then bash <(curl -s https://codecov.io/bash) ; fi
